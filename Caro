library(tidyverse, verbose = FALSE)
dir <- "./espectros/Lado Zr-20Nb/"       ## Aca va tu directorio
n_spec <- length(list.files(dir)) - 1    ## se resta 1 por el archivo testigo que deja el Soft LIBS

## Funcion para lectura de datos
FUN.read <- function(path, n){
        M <- numeric()
        for(i in 1:n){
                spec <- read_tsv(file = paste(path, "a",i,".ols",  sep = ''), 
                                 skip = 6, show_col_types = FALSE) %>% 
                        select(Counts)
                M <- rbind(M, spec$Counts) 
        }
        M
}

M_espectros <- FUN.read(dir, n_spec)
M_espectros <-  M_espectros %>% round(4) 

# dimensiones de la tabla de datos
M_espectros %>% dim() 

# lee las longitudes de onda
wavelen <- read_tsv(file = paste(dir, '/a1.ols', sep = ''), skip = 6,
                    show_col_types = FALSE) %>% 
           select(Wavelength) %>% rowid_to_column()
wavelen$Wavelength <- round(wavelen$Wavelength, 4)

## NORMALIZACION por suma total

num_detec <- 4    # Numero de detectores
index_detec <- list(c(1:2048), c(2049:3983), c(3984:5924), c(5925:7865)) 

dentro de esta funcion puedes agregar la normalizacion que quieras (se aplica por detector)
FUN.norm <- function(M, n = 4, index){
        lista <- vector(mode = 'list', length = n)
        for(i in 1:n){
                # separar detector
                lista[[i]] <- M[,index[[i]]]
                # hacer minimo = 0
                minimo <- apply(lista[[i]], 1, min)
                lista[[i]] <- lista[[i]] + abs(minimo)
                # Dividir por suma total
                total <- apply(lista[[i]], 1, sum)
                lista[[i]] <- lista[[i]] / total
        }
        lista       
}
# normalzia datos
M_norm <- FUN.norm(M_espectros, n = num_detec, index = index_detec)
# unifica detectores en un solo data frame
M_norm <- cbind(M_norm[[1]],M_norm[[2]],M_norm[[3]],M_norm[[4]])
